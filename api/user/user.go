package user

import (
	"github.com/feihua/simple-go/dto"
	"github.com/feihua/simple-go/requests"
	"github.com/feihua/simple-go/services/user"
	"github.com/gin-gonic/gin"
	"net/http"
	"strconv"
	"time"
)

func Login(c *gin.Context) {

	//校验通过，返回请求参数
	c.JSON(http.StatusOK, gin.H{"status": "ok", "type": "account", "currentAuthority": "admin"})
}

func GetUserInfo(c *gin.Context) {

	c.JSON(http.StatusOK, gin.H{"name": "liufeihua", "avatar": "https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png"})
}

type Data struct {
	Key       int       `json:"key"`
	Disabled  bool      `json:"disabled"`
	Href      string    `json:"href"`
	Avatar    string    `json:"avatar"`
	Name      string    `json:"name"`
	Owner     string    `json:"owner"`
	Desc      string    `json:"desc"`
	CallNo    int       `json:"callNo"`
	Status    string    `json:"status"`
	UpdatedAt time.Time `json:"updatedAt"`
	CreatedAt time.Time `json:"createdAt"`
	Progress  int       `json:"progress"`
}
type AutoGenerated struct {
	Data     []Data `json:"data"`
	Total    int    `json:"total"`
	Success  bool   `json:"success"`
	PageSize string `json:"pageSize"`
	Current  int    `json:"current"`
}

func Rule(c *gin.Context) {
	//d := new(Data)
	//d.Key=1
	//d.Disabled=true
	//d.Href="http//www.baidu.com"
	//d.Avatar="https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png"
	//d.Name="liufeihua"
	//d.Owner="liufeihua"
	//d.Desc="这是一段描述"
	//d.CallNo=675
	//d.Status="3"

	d := []Data{
		{
			Key:       0,
			Disabled:  false,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试111111111",
			CallNo:    600,
			Status:    "2",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  50,
		},
		{
			Key:       1,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       2,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       3,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       4,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       5,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       6,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       7,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       8,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       9,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       10,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
		{
			Key:       11,
			Disabled:  true,
			Href:      "http//www.baidu.com",
			Avatar:    "https://gw.alipayobjects.com/zos/rmsportal/udxAbMEhpwthVVcjLXik.png",
			Name:      "liufeihua",
			Owner:     "liufeihua",
			Desc:      "测试2222222222",
			CallNo:    12,
			Status:    "3",
			UpdatedAt: time.Time{},
			CreatedAt: time.Time{},
			Progress:  100,
		},
	}
	a := new(AutoGenerated)
	a.Data = d
	a.Current = 1
	a.PageSize = "10"
	a.Success = true
	a.Total = 100

	c.JSON(http.StatusOK, a)
}

func AddRule(c *gin.Context) {
	data := Data{}
	err := c.ShouldBindJSON(&data)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	println(data.Name)
	c.JSON(http.StatusOK, data)
}

func UpdateRule(c *gin.Context) {
	data := Data{}
	err := c.ShouldBindJSON(&data)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	println(data.Name)
	c.JSON(http.StatusOK, data)
}

func DeleteRule(c *gin.Context) {

	userRequest := Data{}
	err := c.ShouldBind(&userRequest)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	c.JSON(http.StatusOK, gin.H{"data": "dsfsd"})
}

func GetUser(c *gin.Context) {

	//实例化一个TestRequest结构体，用于接收参数
	userRequest := requests.UserRequest{}

	//接收请求参数
	err := c.ShouldBind(&userRequest)

	//判断参数校验是否通过，如果不通过，把错误返回给前端
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	var service user.UserContract = &user.UserService{}

	result, _ := service.GetUserList(1, 10)

	//校验通过，返回请求参数
	c.JSON(http.StatusOK, gin.H{"data": result})
}

func CreateUser(c *gin.Context) {

	userRequest := requests.UserRequest{}
	err := c.ShouldBindJSON(&userRequest)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	var service user.UserContract = &user.UserService{}

	u := dto.UserDto{
		Name:     userRequest.Name,
		NickName: userRequest.NickName,
		Mobile:   userRequest.Mobile,
		Email:    userRequest.Email,
	}
	result := service.CreateUser(u)
	c.JSON(http.StatusOK, gin.H{"data": result})
}

func GetUserList(c *gin.Context) {
	userRequest := requests.UserRequest{}
	err := c.ShouldBind(&userRequest)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	current := c.DefaultQuery("current", "1")
	pageNum, _ := strconv.Atoi(current)

	pageSize := c.DefaultQuery("pageSize", "10")
	size, _ := strconv.Atoi(pageSize)

	var service user.UserContract = &user.UserService{}

	result, total := service.GetUserList(pageNum, size)

	println(total)
	c.JSON(http.StatusOK, gin.H{"data": result, "success": true, "current": current, "total": total, "pageSize": pageSize})
}

func UpdateUser(c *gin.Context) {

	userRequest := requests.UserRequest{}
	err := c.ShouldBind(&userRequest)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	var service user.UserContract = &user.UserService{}

	u := dto.UserDto{
		Id:       userRequest.Id,
		Name:     userRequest.Name,
		NickName: userRequest.NickName,
		Mobile:   userRequest.Mobile,
		Email:    userRequest.Email,
	}
	result := service.UpdateUser(u)
	c.JSON(http.StatusOK, gin.H{"data": result})
}

func DeleteUserById(c *gin.Context) {

	userRequest := requests.UserRequest{}
	err := c.ShouldBind(&userRequest)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	var service user.UserContract = &user.UserService{}

	result := service.DeleteUserById(userRequest.Id)
	c.JSON(http.StatusOK, gin.H{"data": result})
}

func UpdateUserRole(c *gin.Context) {

	request := requests.UserRoleRequest{}
	err := c.ShouldBind(&request)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}

	var service user.UserContract = &user.UserService{}

	err = service.UpdateUserRole(request)
	if err != nil {
		c.JSON(http.StatusOK, gin.H{"error": err.Error()})
		return
	}
	c.JSON(http.StatusOK, gin.H{"data": "成功"})
}
