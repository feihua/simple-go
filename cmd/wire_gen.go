// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	system2 "github.com/feihua/simple-go/internal/controller/system"
	"github.com/feihua/simple-go/internal/dao/system"
	"github.com/feihua/simple-go/internal/model"
	"github.com/feihua/simple-go/internal/router"
	"github.com/feihua/simple-go/internal/service/system/dept"
	"github.com/feihua/simple-go/internal/service/system/dict"
	"github.com/feihua/simple-go/internal/service/system/log"
	"github.com/feihua/simple-go/internal/service/system/menu"
	"github.com/feihua/simple-go/internal/service/system/role"
	"github.com/feihua/simple-go/internal/service/system/user"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func initApp() *gin.Engine {
	db := model.Init()
	userDao := system.NewUserDao(db)
	userRoleDao := system.NewUserRoleDao(db)
	menuDao := system.NewMenuDao(db)
	roleDao := system.NewRoleDao(db)
	userService := user.NewUserServiceImpl(userDao, userRoleDao, menuDao, roleDao)
	userController := system2.NewUserController(userService)
	roleMenuDao := system.NewRoleMenuDao(db)
	roleService := role.NewRoleServiceImpl(roleDao, menuDao, roleMenuDao)
	roleController := system2.NewRoleController(roleService)
	menuService := menu.NewMenuServiceImpl(menuDao)
	menuController := system2.NewMenuController(menuService)
	logDao := system.NewLogDao(db)
	logService := log.NewLogServiceImpl(logDao)
	logController := system2.NewLogController(logService)
	dictDao := system.NewDictDao(db)
	dictService := dict.NewDictServiceImpl(dictDao)
	dictController := system2.NewDictController(dictService)
	deptDao := system.NewDeptDao(db)
	deptService := dept.NewDeptServiceImpl(deptDao)
	deptController := system2.NewDeptController(deptService)
	engine := router.Init(userController, roleController, menuController, logController, dictController, deptController)
	return engine
}
